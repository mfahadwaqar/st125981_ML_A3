name: ML Model CI/CD Pipeline

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  basic-tests:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python 3.12
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run unit tests
        run: python -m pytest test_model.py -v --tb=short

  docker-tests:
    runs-on: ubuntu-latest
    needs: basic-tests

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image
        run: docker build -t carprice-a3:test .

      - name: Run container test
        run: docker run --rm carprice-a3:test python -m pytest test_model.py -v

  mlflow-tests:
    runs-on: ubuntu-latest
    needs: basic-tests

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install MLflow dependencies
        run: pip install mlflow pandas numpy scikit-learn

      - name: Test MLflow connection
        env:
          MLFLOW_TRACKING_USERNAME: ${{ secrets.MLFLOW_TRACKING_USERNAME }}
          MLFLOW_TRACKING_PASSWORD: ${{ secrets.MLFLOW_TRACKING_PASSWORD }}
          MLFLOW_TRACKING_URI: ${{ secrets.MLFLOW_TRACKING_URI }}
        run: |
          python -c "
          import mlflow, os
          mlflow.set_tracking_uri(os.getenv('MLFLOW_TRACKING_URI'))
          print('Connected to MLflow successfully')
          "

  deploy-docker:
    runs-on: ubuntu-latest
    needs: [docker-tests]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/carprice-a3:latest

  deploy-server:
    runs-on: ubuntu-latest
    needs: deploy-docker
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Copy docker-compose.yml to remote server
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ml.brain.cs.ait.ac.th
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.KEY }} # PEM private key (includes Proc-Type)
          passphrase: ${{ secrets.PASSPHRASE }}
          proxy_host: bazooka.cs.ait.ac.th
          proxy_username: ${{ secrets.USERNAME }}
          proxy_key: ${{ secrets.KEY }}
          proxy_passphrase: ${{ secrets.PASSPHRASE }}
          source: "docker-compose.yml"
          target: "st125981/"
          port: 22
          timeout: 30s
          command_timeout: 10m

      - name: SSH into remote server and redeploy
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ml.brain.cs.ait.ac.th
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.KEY }}
          passphrase: ${{ secrets.PASSPHRASE }}
          proxy_host: bazooka.cs.ait.ac.th
          proxy_username: ${{ secrets.USERNAME }}
          proxy_key: ${{ secrets.KEY }}
          proxy_passphrase: ${{ secrets.PASSPHRASE }}
          script: |
            set -euxo pipefail
            cd ~/st125981
            docker compose down || true
            docker compose up -d --build
